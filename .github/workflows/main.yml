#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: Main (Build/Test/Publish)

on:
  workflow_call:
    inputs:
      spark:
        description: The Spark version of Spark image.
        required: true
        type: string
        default: 3.3.0
      scala:
        description: The Scala version of Spark image.
        required: true
        type: string
        default: 2.12
      java:
        description: The Java version of Spark image.
        required: true
        type: string
        default: 11

jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spark_version:
          - ${{ inputs.spark }}
        scala_version:
          - ${{ inputs.scala }}
        java_version:
          - ${{ inputs.java }}
        image_suffix: [python3-ubuntu, ubuntu, r-ubuntu, python3-r-ubuntu]
    steps:
      - name: Checkout Spark repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tags
        run: |
          TAG=scala${{ matrix.scala_version }}-java${{ matrix.java_version }}-${{ matrix.image_suffix }}

          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          TEST_REPO=ghcr.io/$REPO_OWNER/spark-docker
          IMAGE_NAME=spark
          IMAGE_PATH=${{ matrix.spark_version }}/$TAG
          UNIQUE_IMAGE_TAG=${{ matrix.spark_version }}-$TAG

          # Unique image tag in each version: scala2.12-java11-python3-ubuntu
          echo "UNIQUE_IMAGE_TAG=${UNIQUE_IMAGE_TAG}" >> $GITHUB_ENV
          # Test repo: ghcr.io/apache/spark-docker
          echo "TEST_REPO=${TEST_REPO}" >> $GITHUB_ENV
          # Image name: spark
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          # Image dockerfile path: 3.3.0/scala2.12-java11-python3-ubuntu
          echo "IMAGE_PATH=${IMAGE_PATH}" >> $GITHUB_ENV

      - name: Print Image tags
        run: |
          echo "UNIQUE_IMAGE_TAG: "${UNIQUE_IMAGE_TAG}
          echo "TEST_REPO: "${TEST_REPO}
          echo "IMAGE_NAME: "${IMAGE_NAME}
          echo "IMAGE_PATH: "${IMAGE_PATH}

      - name: Build and push test image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.IMAGE_PATH }}
          push: true
          tags: ${{ env.TEST_REPO }}:${{ env.UNIQUE_IMAGE_TAG }}
          platforms: linux/amd64,linux/arm64

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
